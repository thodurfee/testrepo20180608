#!/bin/bash
#
#
#
#######################
# 01: Setup and Check #
###################################################################
# start with a basic check to just see that I can update accordingly
#
git status
git add .
cd "./D Settings"
#
git status
#
#
#
metafile="meta.csv"
outputfile="03 commit message.txt"
#
#
#
#
###################################
# 02: Define Meta Program Details #
###################################################################
# Purpose: Define each of the project meta data pieces so I can
#			 add them to the update log
#
# Explaination: the $() over everything is to allow for the global
#		 			to be defined as the output of the script line
#
# 				-F is to clarify that this is going to look at a
#					 file
#
# 				"," is a seperator of a csv file
#
# 				"/insert text/" is the search term for awk to 
#					find in the meta file
#
# 				cut -d , -f2  is to only print the second cell
#					 of this line
#
#				the awk part will find the line that the search
#					 term exists on
#
#				the cut will limitthe printed output from the 
#					whole line, to the second cell
#
# 				the awk $1=$1 piece is to remove spaces between
#					 the pieces of the paste
#
project_name=$( awk -F "," "/Project Name/"  "$metafile"  |  cut  -d , -f2 | awk '{$1=$1};1')
echo "Project Name:$project_name"
#
#
project_state=$( awk -F "," "/Project State/"  "$metafile"  |  cut  -d , -f2 | awk '{$1=$1};1')
echo "Project State:$project_state"
#
#
getcount=$( awk -F "," "/Project Run Count/"  "$metafile"  |  cut  -d , -f2 | awk '{$1=$1};1')
echo "Get Count:$getcount"
#
#
getcountheader=$( awk -F "," "/Project Run Count/"  "$metafile"  |  cut  -d , -f1 | awk '{$1=$1};1')
echo "Get Count Header:$getcountheader"
#
#
inccount=$(printf "%04g" $(expr $getcount + 1))
echo "Incremented Count:$inccount"
#
#
lastbranch=$( awk -F "," "/Project Previous Branch/"  "$metafile"  |  cut  -d , -f2 | awk '{$1=$1};1')
echo "Last Branch:$lastbranch"
#
#
lastbranchheader=$( awk -F "," "/Project Previous Branch/"  "$metafile"  |  cut  -d , -f1 | awk '{$1=$1};1')
echo "Last Branch Header:$lastbranchheader"
#
#
thisbranch=$( awk -F "," "/Project Current Branch/"  "$metafile"  |  cut  -d , -f2 | awk '{$1=$1};1')
echo "This Branch:$thisbranch"
#
#
thisbranchheader=$( awk -F "," "/Project Current Branch/"  "$metafile"  |  cut  -d , -f1 | awk '{$1=$1};1')
echo "This Branch Header:$thisbranchheader"
#
#
otherbranch=$( awk -F "," "/Project Last Stable Branch/"  "$metafile"  |  cut  -d , -f2 | awk '{$1=$1};1')
echo "Last Stable Branch:$otherbranch"
#
#
otherbranchheader=$( awk -F "," "/Project Last Stable Branch/"  "$metafile"  |  cut  -d , -f1 | awk '{$1=$1};1')
echo "Last Stable Branch Header:$otherbranchheader"
#
#
startyear=$( awk -F "," "/Project Initialization Year/"  "$metafile"  |  cut  -d , -f2 | awk '{$1=$1};1')
echo "Start Year:$startyear"
#
#
startmonth=$( printf "%02g" $(awk -F "," "/Project Initialization Month/"  "$metafile"  |  cut  -d , -f2 | awk '{$1=$1};1') )
echo "Start Month:$startmonth"
#
#
proj_abv=$( awk -F "," "/Project Abreviation/"  "$metafile"  |  cut  -d , -f2 | awk '{$1=$1};1')
echo "Project Abreviation:$proj_abv"
#
#
newbranch=$( printf '%s\n' "$proj_abv" "$startyear" "$startmonth" "$inccount" | paste -sd "_" | awk '{$1=$1};1')
echo "New Branch Name:$newbranch"
#
#
#
############################
# 03: Update the meta file #
###################################################################
#
pwd
echo "Meta Settings File:$metafile"
#
sed -i "s/$getcountheader , $getcount/$getcountheader , $inccount/g" $metafile
sed -i "s/$thisbranchheader , $thisbranch/$thisbranchheader , $newbranch/g" $metafile
sed -i "s/$lastbranchheader , $lastbranch/$lastbranchheader , $thisbranch/g" $metafile
#
#
#
##############################
# 04: Update the commit file #
###################################################################
#
printf '%s\n' " " >> "$outputfile"
printf '%s\n' " " >> "$outputfile"
printf '%s\n' "Time of Commit: $(date)" >> "$outputfile"
#
#
#
cd ../
project_directory=$(pwd)
#
#
#
#
######################
# 05: Run the commit #
###################################################################
#
git add .
"./D Settings/01 git ignore files.txt"
git checkout -b $newbranch
git commit -F "./D Settings/03 commit message.txt"
git status
git push origin $newbranch
#
#
#
##################################
# 06: Setup the next commit file #
###################################################################
#
cd "./D Settings"
mv "./03 commit message.txt" "./00 commit logs/$thisbranch commit.txt"
#
#
# %s signifies it is a string
# \n is to signify you want the next piece to start a new line
#
printf '%s\n' "Project Name: $project_name " > "$outputfile"
printf '%s\n' "Project State: $project_state " >> "$outputfile"
printf '%s\n' "Project Directory: $project_directory " >> "$outputfile"
printf '%s\n' "Last Update: $(date) " >> "$outputfile"
printf '%s\n' "Branch Name: $newbranch " >> "$outputfile"
printf '%s\n' "Branch UID: $inccount " >> "$outputfile"
printf '%s\n' " " >> "$outputfile"
printf '%s\n' "Last Time I Worked On This Project : " >> "$outputfile"
printf '%s\n' "reminder-no punctuations that could be escape terms " >> "$outputfile"
printf '%s\n' " " >> "$outputfile"
printf '%s\n' "This Time I : " >> "$outputfile"
printf '%s\n' "reminder-no punctuations that could be escape terms " >> "$outputfile"
printf '%s\n' " " >> "$outputfile"
printf '%s\n' "Next Time I Will : " >> "$outputfile"
printf '%s\n' "reminder-no punctuations that could be escape terms " >> "$outputfile"
printf '%s\n' " " >> "$outputfile"
#
#
#
############
# 07 : End #
###################################################################
#